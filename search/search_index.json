{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Silimate Platform Docs This is the documentation website for the Silimate Platform. For any questions, comments, or concerns, please contact support via Slack/ email . Quick Setup: Web GUI Silimate Platform should be already installed and properly running on your CAD server. If it is not, see Installation and/or Infrastructure , or contact support. Port forwarding (recommended) To access the GUI on your local machine, you need to provide an SSH tunnel into the CAD server with port forwarding . To do this, add the argument -L 80:192.168.49.2:80 to your ssh command, for example: sudo ssh -Y -i testing_ec2.pem -L 80:192.168.49.2:80 ec2-user@ec2-XX-XX-X-XXX.us-west-2.compute.amazonaws.com NOTE: you may need root privileges on your local machine to forward to port 80, hence sudo in the above command. Now, you should be able to navigate to http://localhost on your local browser and the platform web GUI should appear. X11 forwarding/VNC Assuming you have X11 forwarding/VNC setup between your local machine and the CAD server, you may simply open a remote browser session (e.g., firefox ) and navigate to http://192.168.49.2 . NOTE: this approach may be less responsive than port forwarding. Quick Setup: CLI Silimate Platform should be already installed and properly running on your CAD server. If it is not, see Installation and/or Infrastructure , or contact support. CAD Server Setup Ensure requests library for python3 is installed: python3 -m pip install requests Add to your .profile (or equivalent shell init script): export SILIMATE_ENDPOINT=192.168.49.2 export SILIMATE_PASSWORD=Silimate1234%4321etamiliS export PATH=$PATH:/silimate/cli Restart your shell and test with smake -l . You should see a list of all the available flows, something like: example-verilator-sim (active, paused) example-yosys-syn (active, paused) gcd-genus-syn (active) gcd-genus-syn-step (active) Local Machine Setup Make sure that SSH port forwarding is set up correctly. See Quick Setup: Web GUI Clone the CLI to your local machine path <CLI_DIRECTORY> (wherever you desire): git clone https://github.com/silimate/cli/ <CLI_DIRECTORY> Ensure the first line of <CLI_DIRECTORY>/smake points to your python3 interpreter path, e.g.: #!/usr/local/bin/python3 Ensure requests library for python3 is installed: python3 -m pip install requests Add to your .profile (or equivalent shell init script): export SILIMATE_ENDPOINT=localhost export SILIMATE_PASSWORD=Silimate1234%4321etamiliS export PATH=$PATH:<CLI_DIRECTORY> Restart your shell and test with smake -l . You should see a list of all the available flows, something like: example-verilator-sim (active, paused) example-yosys-syn (active, paused) gcd-genus-syn (active) gcd-genus-syn-step (active)","title":"Home"},{"location":"#welcome-to-silimate-platform-docs","text":"This is the documentation website for the Silimate Platform. For any questions, comments, or concerns, please contact support via Slack/ email .","title":"Welcome to Silimate Platform Docs"},{"location":"#quick-setup-web-gui","text":"Silimate Platform should be already installed and properly running on your CAD server. If it is not, see Installation and/or Infrastructure , or contact support.","title":"Quick Setup: Web GUI"},{"location":"#port-forwarding-recommended","text":"To access the GUI on your local machine, you need to provide an SSH tunnel into the CAD server with port forwarding . To do this, add the argument -L 80:192.168.49.2:80 to your ssh command, for example: sudo ssh -Y -i testing_ec2.pem -L 80:192.168.49.2:80 ec2-user@ec2-XX-XX-X-XXX.us-west-2.compute.amazonaws.com NOTE: you may need root privileges on your local machine to forward to port 80, hence sudo in the above command. Now, you should be able to navigate to http://localhost on your local browser and the platform web GUI should appear.","title":"Port forwarding (recommended)"},{"location":"#x11-forwardingvnc","text":"Assuming you have X11 forwarding/VNC setup between your local machine and the CAD server, you may simply open a remote browser session (e.g., firefox ) and navigate to http://192.168.49.2 . NOTE: this approach may be less responsive than port forwarding.","title":"X11 forwarding/VNC"},{"location":"#quick-setup-cli","text":"Silimate Platform should be already installed and properly running on your CAD server. If it is not, see Installation and/or Infrastructure , or contact support.","title":"Quick Setup: CLI"},{"location":"#cad-server-setup","text":"Ensure requests library for python3 is installed: python3 -m pip install requests Add to your .profile (or equivalent shell init script): export SILIMATE_ENDPOINT=192.168.49.2 export SILIMATE_PASSWORD=Silimate1234%4321etamiliS export PATH=$PATH:/silimate/cli Restart your shell and test with smake -l . You should see a list of all the available flows, something like: example-verilator-sim (active, paused) example-yosys-syn (active, paused) gcd-genus-syn (active) gcd-genus-syn-step (active)","title":"CAD Server Setup"},{"location":"#local-machine-setup","text":"Make sure that SSH port forwarding is set up correctly. See Quick Setup: Web GUI Clone the CLI to your local machine path <CLI_DIRECTORY> (wherever you desire): git clone https://github.com/silimate/cli/ <CLI_DIRECTORY> Ensure the first line of <CLI_DIRECTORY>/smake points to your python3 interpreter path, e.g.: #!/usr/local/bin/python3 Ensure requests library for python3 is installed: python3 -m pip install requests Add to your .profile (or equivalent shell init script): export SILIMATE_ENDPOINT=localhost export SILIMATE_PASSWORD=Silimate1234%4321etamiliS export PATH=$PATH:<CLI_DIRECTORY> Restart your shell and test with smake -l . You should see a list of all the available flows, something like: example-verilator-sim (active, paused) example-yosys-syn (active, paused) gcd-genus-syn (active) gcd-genus-syn-step (active)","title":"Local Machine Setup"},{"location":"architecture/","text":"Architecture of Silimate Platform","title":"Architecture"},{"location":"architecture/#architecture-of-silimate-platform","text":"","title":"Architecture of Silimate Platform"},{"location":"built-in-steps/","text":"Built-In Steps","title":"Built-In Steps"},{"location":"built-in-steps/#built-in-steps","text":"","title":"Built-In Steps"},{"location":"cli/","text":"Command-Line Interface (CLI)","title":"CLI"},{"location":"cli/#command-line-interface-cli","text":"","title":"Command-Line Interface (CLI)"},{"location":"dashboards/","text":"Dashboards The platform's dashboarding system","title":"Dashboards"},{"location":"dashboards/#dashboards","text":"The platform's dashboarding system","title":"Dashboards"},{"location":"debug-tools/","text":"Debug Tools","title":"Debug Tools"},{"location":"debug-tools/#debug-tools","text":"","title":"Debug Tools"},{"location":"flow-building/","text":"Flow Building","title":"Flow Building"},{"location":"flow-building/#flow-building","text":"","title":"Flow Building"},{"location":"flow-management/","text":"Flow Management In this section, we will discuss how to manage and run existing flows on the Silimate Platform via the web interface. CLI flow management is discussed at CLI . Terminology Below are the most important terms to be aware of when using the platform: Flow: A directed acyclic graph (DAG) describing the set of steps that happen and the dependencies between them Flow Run: A particular execution of the flow, where each step is scheduled then executed Active Flow: The currently selected flow Active Flow Run: The currently selected flow run Step: A function or set of functions, typically within one tool, that needs to happen in a flow Task: A particular execution of a step Flow Builder: Page where you can build, run, and monitor flows Home Page: Flow Summary The home page yields a flow summary table, with the flow name, when the last run occurred, the status of all flow runs, and the status of all tasks. For each flow, there is also a set of three actions: Make flow active: change active flow to be set to flow name associated with row Trigger flow: kick off a new flow run Reset flow: delete all information on prior flow runs NOTE: \"Reset Flow\" button does not delete the flow in question. To delete a flow, see Deleting a Flow . Running a Flow From the web interface, flows can be run in one of two ways: Trigger a flow run on home page Navigate to \"Flow Builder\" in the side bar and click \"Fresh run\" at the top After running a flow, you can view each task and its dependencies/status in the \"Flow Builder\" page. Dependencies are shown as lines between outputs of one step and inputs of another. Task Logs Tasks typically run in a container. On the \"Flow Builder\" page, logs of a task from its container can be viewed by first clicking to select a task, then clicking the \"View Logs\" bar at the bottom. The blue button on the far right of the \"View Logs\" bar can be used to open the logs in a new window. Task Statuses undefined: flow run has not been initiated null: flow run has been initiated, but task has not been scheduled yet scheduled: task's dependencies have been met and task has been scheduled to run, but task is not queued yet queued: task has been assigned to an execution slot and is awaiting a worker running: task is running success: task completed with non-error return code (caveat: might not have completed successfully!) failed: task completed with return code upstream_failed: one of the task's upstream dependencies did not complete successfully, so task will not run Pausing a Flow Flows can be paused by clicking the \"Pause\" button in the top panel of the flow builder. Pausing a flow will not kill running tasks. It will not queue any new tasks; tasks will remain in the null or scheduled state. Flows can be unpaused by clicking the button again. Aborting a Flow Aborting a flow will pause a flow and additionally mark any running/scheduled tasks as failed . This will effectively kill the flow run. Getting the Results of a Flow Step Each flow step produces output collateral. This output collateral is available on the CAD server at path /silimate/build/<flow_name>/<step_name>/outputs/ . This output collateral can also be downloaded by right-clicking on a step and clicking \"Access Outputs\". Rerunning Flow Steps To rerun a step, right-click on the step and click Run from the dropdown menu. You will have the option to rerun the up/downstream components in addition. You can also clear a flow step or mark it as failed. You can use \"Mark as Failed\" to \"run up to\" a certain step, by marking the steps after it as failed.","title":"Flow Management"},{"location":"flow-management/#flow-management","text":"In this section, we will discuss how to manage and run existing flows on the Silimate Platform via the web interface. CLI flow management is discussed at CLI .","title":"Flow Management"},{"location":"flow-management/#terminology","text":"Below are the most important terms to be aware of when using the platform: Flow: A directed acyclic graph (DAG) describing the set of steps that happen and the dependencies between them Flow Run: A particular execution of the flow, where each step is scheduled then executed Active Flow: The currently selected flow Active Flow Run: The currently selected flow run Step: A function or set of functions, typically within one tool, that needs to happen in a flow Task: A particular execution of a step Flow Builder: Page where you can build, run, and monitor flows","title":"Terminology"},{"location":"flow-management/#home-page-flow-summary","text":"The home page yields a flow summary table, with the flow name, when the last run occurred, the status of all flow runs, and the status of all tasks. For each flow, there is also a set of three actions: Make flow active: change active flow to be set to flow name associated with row Trigger flow: kick off a new flow run Reset flow: delete all information on prior flow runs NOTE: \"Reset Flow\" button does not delete the flow in question. To delete a flow, see Deleting a Flow .","title":"Home Page: Flow Summary"},{"location":"flow-management/#running-a-flow","text":"From the web interface, flows can be run in one of two ways: Trigger a flow run on home page Navigate to \"Flow Builder\" in the side bar and click \"Fresh run\" at the top After running a flow, you can view each task and its dependencies/status in the \"Flow Builder\" page. Dependencies are shown as lines between outputs of one step and inputs of another.","title":"Running a Flow"},{"location":"flow-management/#task-logs","text":"Tasks typically run in a container. On the \"Flow Builder\" page, logs of a task from its container can be viewed by first clicking to select a task, then clicking the \"View Logs\" bar at the bottom. The blue button on the far right of the \"View Logs\" bar can be used to open the logs in a new window.","title":"Task Logs"},{"location":"flow-management/#task-statuses","text":"undefined: flow run has not been initiated null: flow run has been initiated, but task has not been scheduled yet scheduled: task's dependencies have been met and task has been scheduled to run, but task is not queued yet queued: task has been assigned to an execution slot and is awaiting a worker running: task is running success: task completed with non-error return code (caveat: might not have completed successfully!) failed: task completed with return code upstream_failed: one of the task's upstream dependencies did not complete successfully, so task will not run","title":"Task Statuses"},{"location":"flow-management/#pausing-a-flow","text":"Flows can be paused by clicking the \"Pause\" button in the top panel of the flow builder. Pausing a flow will not kill running tasks. It will not queue any new tasks; tasks will remain in the null or scheduled state. Flows can be unpaused by clicking the button again.","title":"Pausing a Flow"},{"location":"flow-management/#aborting-a-flow","text":"Aborting a flow will pause a flow and additionally mark any running/scheduled tasks as failed . This will effectively kill the flow run.","title":"Aborting a Flow"},{"location":"flow-management/#getting-the-results-of-a-flow-step","text":"Each flow step produces output collateral. This output collateral is available on the CAD server at path /silimate/build/<flow_name>/<step_name>/outputs/ . This output collateral can also be downloaded by right-clicking on a step and clicking \"Access Outputs\".","title":"Getting the Results of a Flow Step"},{"location":"flow-management/#rerunning-flow-steps","text":"To rerun a step, right-click on the step and click Run from the dropdown menu. You will have the option to rerun the up/downstream components in addition. You can also clear a flow step or mark it as failed. You can use \"Mark as Failed\" to \"run up to\" a certain step, by marking the steps after it as failed.","title":"Rerunning Flow Steps"},{"location":"infrastructure/","text":"Infrastructure","title":"Infrastructure"},{"location":"infrastructure/#infrastructure","text":"","title":"Infrastructure"},{"location":"installation/","text":"Installation","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installing-updates/","text":"Installing Updates","title":"Installing Updates"},{"location":"installing-updates/#installing-updates","text":"","title":"Installing Updates"},{"location":"metrics/","text":"Metrics","title":"Metrics"},{"location":"metrics/#metrics","text":"","title":"Metrics"},{"location":"step-building/","text":"Step Building","title":"Step Building"},{"location":"step-building/#step-building","text":"","title":"Step Building"}]}